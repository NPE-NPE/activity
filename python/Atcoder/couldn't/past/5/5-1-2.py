#本書のコード
# 3x3 の 2 次元配列となる予定の配列
C = []

for _ in range(0, 3):
    # C の 1 行分を表す 1 次元配列
    row = list(map(int, input().split()))
    C.append(row)

# 矛盾していないかどうかを保持する変数
# 矛盾していたら False
ok = True

# C の 0 列目と 1 列目の差を調べ、全て同じ値でなければ矛盾
if C[0][0] - C[0][1] != C[1][0] - C[1][1] or C[1][0] - C[1][1] != C[2][0] - C[2][1]:
    ok = False

# C の 1 列目と 2 列目の差を調べ、全て同じ値でなければ矛盾
if C[0][1] - C[0][2] != C[1][1] - C[1][2] or C[1][1] - C[1][2] != C[2][1] - C[2][2]:
    ok = False

# C の 0 行目と 1 行目の差を調べ、全て同じ値でなければ矛盾
if C[0][0] - C[1][0] != C[0][1] - C[1][1] or C[0][1] - C[1][1] != C[0][2] - C[1][2]:
    ok = False

# C の 1 行目と 2 行目の差を調べ、全て同じ値でなければ矛盾
if C[1][0] - C[2][0] != C[1][1] - C[2][1] or C[1][1] - C[2][1] != C[1][2] - C[2][2]:
    ok = False

if ok:
    print("Yes")
else:
    print("No")

#自分のコード
c = []
for _ in range(0, 3):
    
    row = list(map(int, input().split()))

    
    c.append(row)

ans = false

#１列目(j = 0)と２列目の差がすべて同じ
if c[0][0] - c[0][1] == c[1][0] - c[1][1] == c[2][0] - c[2][1]:
  ans = true

#２列目(j = 1)と３列目の差がすべて同じ
if c[0][1] - c[0][2] == c[1][1] - c[1][2] == c[2][1] - c[2][2]:
  ans = true


#１行目（i = 0）と２行目の差がすべて同じ
if c[0][0] - c[1][0] == c[0][1] - c[1][1] == c[0][2] - c[1][2]:
  ans = true

#2行目（i = 1）と3行目の差がすべて同じ
if c[1][0] - c[2][0] == c[1][1] - c[2][1] == c[1][2] - c[2][2]:
  ans = true
    
print(ans)

